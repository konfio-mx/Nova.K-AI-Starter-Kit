version: "3"

silent: true
output: prefixed

dotenv:
  - .env

env:
  DOCKER_COMMAND: docker # here you can set "podman", for example
  COMPOSE_MAIN_SERVICE: n8n

vars:
  OLLAMA_MODEL: deepseek-r1:1.5b

includes:
  main:
    taskfile: ./.taskfiles/docker.Taskfile.yml
    flatten: true
    dir: "{{.USER_WORKING_DIR}}"
  lint:
    taskfile: ./.taskfiles/lint.Taskfile.yml
    dir: "{{.USER_WORKING_DIR}}"

tasks:
  setup:
    aliases:
      - config
      - install
    deps: [install:deps, hooks:setup, env:setup, pull-models]

  install:deps:
    desc: Install dependencies
    cmds:
      - echo "Installing dependencies..."
      - pnpm install

  hooks:setup:
    desc: Setup hooks
    cmds:
      - echo "Setting up hooks..."
      - pnpm exec lefthook install

  env:setup:
    desc: Create .env file from example
    cmds:
      - cp .env.example .env
      - echo ".env file created from example"

  pull-models:
    desc: Pull recommended LLM models for Ollama
    deps:
      - up
    cmds:
      - echo "Pulling LLM default model in Ollama ({{.OLLAMA_MODEL}})..."
      - docker compose exec ollama ollama pull {{.OLLAMA_MODEL}}

  logs:n8n:
    desc: Show logs for n8n
    cmds:
      - task: logs
        vars:
          SERVICE: "n8n"

  logs:ollama:
    desc: Show logs for ollama
    cmds:
      - task: logs
        vars:
          SERVICE: "ollama"

  logs:postgres:
    desc: Show logs for postgres
    cmds:
      - task: logs
        vars:
          SERVICE: "postgres"

  logs:qdrant:
    desc: Show logs for qdrant
    cmds:
      - task: logs
        vars:
          SERVICE: "qdrant"

  backup:data:
    desc: Create backup of service's data
    cmds:
      - echo "Creating backup of service's data..."
      - |
        timestamp=$(date +%Y%m%d_%H%M%S)
        backup_dir="./.backups/data_${timestamp}"
        mkdir -p "${backup_dir}"
        cp -R ./services ${backup_dir}
        echo "Backup created in ${backup_dir}"

  clean:data:
    desc: Remove service's data
    cmds:
      - echo "Removing service's data..."
      - task: backup:data
      - rm -rf ./services/**/data/**

  clean:all:
    desc: Remove all containers, volumes and data
    cmds:
      - task: clean
      - task: clean:data

  restart:all:
    desc: Restart all services
    cmds:
      - task: clean:all
      - task: start

  git:rebase:
    desc: "ðŸ”€ Rebase current branch"
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - git rebase origin/main --autostash --strategy-option=ours --quiet
